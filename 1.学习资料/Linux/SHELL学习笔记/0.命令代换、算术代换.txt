

1.文件名代换（Globbing）：* ? [] 请点评
		这些用于匹配的字符称为通配符（Wildcard），具体如下：
		
		* 匹配0个或多个任意字符 
		? 匹配一个任意字符 
		[若干字符] 匹配方括号中任意一个字符的一次出现 
		
		$ ls /dev/ttyS*
		$ ls ch0?.doc
		$ ls ch0[0-2].doc
		$ ls ch[012][0-9].doc注意，Globbing所匹配的文件名是由Shell展开的，也就是说在参数还没传给程序之前已经展开了，
		比如上述ls ch0[012].doc命令，如果当前目录下有ch00.doc和ch02.doc，则传给ls命令的参数实际上是这两个文件名，而不是一个匹配字符串。


2.命令代换：`或 $() 请点评
		由反引号括起来的也是一条命令，Shell先执行该命令，然后将输出结果立刻代换到当前命令行中。
		例如定义一个变量存放date命令的输出：
		
		$ DATE=`date`
		$ echo $DATE命令代换也可以用$()表示：
		
		$ DATE=$(date)3.4. 算术代换：$(()) 请点评
		用于算术计算，$(())中的Shell变量取值将转换成整数，例如：
		
		$ VAR=45
		$ echo $(($VAR+3))$(())中只能用+-*/和()运算符，并且只能做整数运算。


3.算术代换：$(()) 
		用于算术计算，$(())中的Shell变量取值将转换成整数，例如：
		
		$ VAR=45
		$ echo $(($VAR+3))$(())中只能用+-*/和()运算符，并且只能做整数运算。


