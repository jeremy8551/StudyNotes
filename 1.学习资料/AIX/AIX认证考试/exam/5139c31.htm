<!-- output file generated by BM Utilities -->
<html>
<head>
<title>
IBM Certification Study Guide  AIX V4.3 System Support
</title>
</head>
<body bgcolor=#f0f0f0><a name="htmltop"></a>
<p><a href="./5139fm.htm#tocnitH1"><img src="f2htoc.gif"></a>
<a href="./5139indx.htm"><img src="f2hindex.gif"></a>
<a href="5139c31.htm#htmlbot"><img src="f2hbot.gif"></a>
<a href="5139ch3.htm#htmlbot"><img src="f2hprev.gif">Chapter 3.  System
Initialization and Boot</a><br>

<h2><a name="nitH2">3.1  The /etc/inittab File</a>
</h2>

<p>The /etc/inittab file controls the initialization
<a name=index110>process.</a>
<p>The /etc/inittab file supplies the script to the <tt>init</tt> command's
role as a general process dispatcher. The process that constitutes the majority
of the <tt>init</tt> command's process dispatching activities is the /etc/getty
line process, which initiates individual terminal lines. Other processes
typically dispatched by the <tt>init</tt> command are daemons and the shell.
<p>The /etc/inittab file is composed of entries that are position-dependent and
have the following format:
<p><tt>Identifier:RunLevel:Action:Command</tt>
<p>Each entry is delimited by a newline character. A backslash (\) preceding a
newline character indicates the continuation of an entry. There are no limits
(other than maximum entry size) on the number of entries in the /etc/inittab
file. The maximum entry size is 1024 characters. The entry fields are:
<dl>
<dt>
<b>Identifier</b>
<dd>A <a name=index113>one</a> or two character field that uniquely identifies
an object.
<dt>
<b>RunLevel</b>
<dd>The <a name=index119>run</a> level at which this entry can be processed.
<p>The run level has the following attributes:
<ul>
<li>Run levels effectively correspond to a configuration of processes in the
system.
<p><li>Each process started by the <tt>init</tt> command is assigned one or
more run levels in which it can exist.
<p><li>Run levels are represented by the numbers 0 through 9. For example, if
the system is in run level 1, only those entries with a 1 in the runlevel field
are started.
<p><li>When you request the <tt>init</tt> command to change run levels, all
processes without a matching entry in the runlevel field for the target run
level receive a warning signal (SIGTERM). There is a 20-second grace period
before processes are forcibly terminated by the kill signal (SIGKILL).
<p><li>The runlevel field can define multiple run levels for a process by
selecting more than one run level in any combination from 0 through 9. If no
run level is specified, the process is assumed to be valid at all run levels.
<p><li>There are three other values that appear in the runlevel field, even
though they are not true run levels: a, b, and c. Entries that have these
characters in the run level field are processed only when the <tt>telinit</tt>
command requests them to be run (regardless of the current run level of the
system). They differ from run levels in that the <tt>init</tt> command can
never enter run level a, b, or c. Also, a request for the execution of any of
these processes does not change the current run level. Furthermore, a process
started by an a, b, or c command is not killed when the <tt>init</tt> command
changes levels. They are only killed if their line in the /etc/inittab file is
marked off in the action field, their line is deleted entirely from
/etc/inittab, or the <tt>init</tt> command goes into single-user mode.
</ul>
<dt>
<b>Action</b>
<dd>Tells <a name=index125>the</a> <tt>init</tt> command how to treat the
process specified in the process field. The following actions are recognized by
the <tt>init</tt> command:
<dl>
<dt>
<b>respawn</b>
<dd>If <a name=index131>the</a> process does not exist, start the process. Do
not wait for its termination (continue scanning the /etc/inittab file). Restart
the process when it dies. If the process exists, do nothing and continue
scanning the /etc/inittab file.
<dt>
<b>wait</b>
<dd>When <a name=index136>the</a> <tt>init</tt> command enters the run level
that matches the entry's run level, start the process and wait for its
termination. All subsequent reads of the /etc/inittab file, while the
<tt>init</tt> command is in the same run level, will cause the <tt>init</tt>
command to ignore this entry.
<dt>
<b>once</b>
<dd>When <a name=index141>the</a> <tt>init</tt> command enters a run level that
matches the entry's run level, start the process, and do not wait for
termination. When it dies, do not restart the process. When the system enters a
new run level, and the process is still running from a previous run level
change, the program will not be restarted.
<dt>
<b>boot</b>
<dd>Process <a name=index146>the</a> entry only during system boot, which is
when the <tt>init </tt>command reads the /etc/inittab file during system
startup. Start the process, do not wait for its termination, and when it dies,
do not restart the process. In order for the instruction to be meaningful, the
run level should be the default or it must match the <tt>init</tt> command's
run level at boot time. This action is useful for an initialization function
following a hardware reboot of the system.
<dt>
<b>bootwait</b>
<dd>Process <a name=index151>the</a> entry the first time that the
<tt>init</tt> command goes from single-user to multi-user state after the
system is booted. Start the process, wait for its termination, and when it
dies, do not restart the process. If the initdefault is 2, run the process
right after boot.
<dt>
<b>powerfail</b>
<dd>Execute <a name=index156>the</a> process associated with this entry only
when the <tt>init</tt> command receives a power fail signal (SIGPWR).
<dt>
<b>powerwait</b>
<dd>Execute <a name=index161>the</a> process associated with this entry only
when the <tt>init</tt> command receives a power fail signal (SIGPWR), and wait
until it terminates before continuing to process the /etc/inittab file.
<dt>
<b>off</b>
<dd>If <a name=index166>the</a> process associated with this entry is currently
running, send the warning signal (SIGTERM), and wait 20 seconds before
terminating the process with the kill signal (SIGKILL). If the process is not
running, ignore this entry.
<dt>
<b>ondemand</b>
<dd>Functionally <a name=index171>identical</a> to respawn, except this action
applies to the a, b, or c values, not to run levels.
<dt>
<b>initdefault</b>
<dd>An <a name=index176>entry</a> with this action is only scanned when the
<tt>init</tt> command is initially invoked. The <tt>init</tt> command uses this
entry, if it exists, to determine which run level to enter initially. It does
this by taking the highest run level specified in the runlevel field and using
that as its initial state. If the run level field is empty, this is interpreted
as 0123456789: therefore, the <tt>init</tt> command enters run level 9.
Additionally, if the <tt>init</tt> command does not find an initdefault entry
in the /etc/inittab file, it requests an initial run level from the user at
boot time.
<dt>
<b>sysinit</b>
<dd>Entries <a name=index181>of</a> this type are executed before the
<tt>init</tt> command tries to access the console before login. It is expected
that this entry will only be used to initialize devices on which the
<tt>init</tt> command might try to ask the run level question. These entries
are executed and waited for before continuing.
</dl>
<dt>
<b>Command</b>
<dd>A <a name=index186>shell</a> command to execute. The entire command field
is prefixed with exec and passed to a forked sh as <tt>sh -c exec</tt> command.
Any legal sh syntax can appear in this field. Comments can be inserted with the
# comment syntax.
</dl>
<p>The <tt>getty</tt> <a name=index188>command</a> writes over the output of
any commands that appear before it in the /etc/inittab file. To record the
output of these commands to the boot log, pipe their output to the <tt>alog
-tboot</tt> <a name=index190>command.</a>
<p>The stdin, stdout, and stdferr file <a name=index192>descriptors</a> may not
be available while init is processing inittab entries. Any entries writing to
stdout or stderr may not work predictably unless they redirect their output to
a file or to /dev/console.
<p>The following commands are the only supported method for modifying the
records in the /etc/inittab file:
<dl>
<dt>
<b>chitab</b>
<dd>Changes <a name=index201>records</a> in the /etc/inittab file.
<dt>
<b>lsitab</b>
<dd>Lists <a name=index206>records</a> in the /etc/inittab file.
<dt>
<b>mkitab</b>
<dd>Adds <a name=index211>records</a> to the /etc/inittab file.
<dt>
<b>rmitab</b>
<dd>Removes <a name=index216>records</a> from the /etc/inittab file.
</dl>
<p>An example of /etc/inittab entries is shown in
<a href="#34589">Figure 8</a>.
<br><br><a name=34589>
<br>
<img src="niti1.gif"></a>
<br><i>Figure 8: Entries in /etc/inittab</i><br><br>

<h4><a name="nitH4">3.1.0.1  Order of /etc/inittab Entries</a>
</h4>

<p><a name=index221>The</a> base process entries in the /etc/initab file is
ordered as follows:
<ul>
<li>1 - initdefault
<p><li>2 - sysinit
<p><li>3 - Powerfailure Detection (powerfail)
<p><li>4 - Multiuser check (rc)
<p><li>5 - /etc/firstboot (fbcheck)
<p><li>6 - System Resource Controller (srcmstr)
<p><li>7 - Start TCP/IP daemons (rctcpip)
<p><li>8 - Start NFS daemons (rcnfs)
<p><li>9 - cron
<p><li>10 - pb cleanup (piobe)
<p><li>11 - getty for the console (cons)
</ul>
<p>The <a name=index223>System</a> Resource Controller (SRC) has to be started
near the beginning of the etc/inittab file since the SRC daemon is needed to
start other processes. Since NFS <a name=index227>requires</a> TCP/IP daemons
to run correctly, TCP/IP daemons are started ahead of the NFS daemons. The
entries in the /etc/inittab file are ordered according to dependencies, meaning
that if a process (process1) requires that another process (process2) be
present for it to operate normally, then an entry for process2 comes before an
entry for process1 in the /etc/inittab file.
<a name="htmlbot"></a>
<p><a href="./5139fm.htm#tocnitH2"><img src="f2htoc.gif"></a>
<a href="./5139indx.htm"><img src="f2hindex.gif"></a>
<a href="5139c31.htm#htmltop"><img src="f2htop.gif"></a>
<a href="5139c32.htm#htmltop"><img src="f2hnext.gif">3.2  Initialization
Customization and Problem Determination</a><br>
</body>
</html>

